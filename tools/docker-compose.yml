version: "3.7"

services:
  mongo:
    image: mongo:latest
    container_name: mongo_container
    ports:
      - 27017:27017
    volumes:
      - ./database/mongo:/data/db
    networks:
      - dripp_network

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - ./database/redis/data:/data
    networks:
      - dripp_network

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq_container
    ports:
      - 5672:5672

  postgres:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: 89PsZXyRStOT2
      POSTGRES_DB: sentry
    networks:
      - dripp_network
    volumes:
      - "./database/postgres:/var/lib/postgresql/data"

  sentry-base:
    image: sentry:latest
    container_name: sentry_base_container
    restart: always
    ports:
      - "9000:9000"
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - dripp_network
    volumes:
      - "./database/sentry:/var/lib/sentry/files"

  sentry-cron:
    image: sentry:latest
    container_name: sentry_cron_container
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    command: "sentry run cron"
    networks:
      - dripp_network
    volumes:
      - "./database/sentry/:/var/lib/sentry/files"

  sentry-worker:
    image: sentry:latest
    container_name: sentry_worker_container
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    command: "sentry run worker"
    networks:
      - dripp_network
    volumes:
      - "./database/sentry/:/var/lib/sentry/files"

networks:
  dripp_network:
